<Window x:Class="Monitorian.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:models="clr-namespace:Monitorian.Models"
		xmlns:controls="clr-namespace:Monitorian.Views.Controls"
		Width="360" Height="200"
		ResizeMode="NoResize" SizeToContent="WidthAndHeight"
		ShowInTaskbar="False"
		Background="{StaticResource App.Background}" AllowsTransparency="True" WindowStyle="None">
	<Window.Resources>
		<sys:Double x:Key="ButtonHeight">60</sys:Double>
		<sys:Double x:Key="ThumbHeight">40</sys:Double>

		<!-- Slider -->
		<Color x:Key="Slider.Filled.Static.BackgroundColor">#FF2982CC</Color>
		<Color x:Key="Slider.Filled.MouseOver.BackgroundColor">#FF1A5280</Color>
		<Color x:Key="Slider.Filled.Pressed.BackgroundColor">#FF5CA4DE</Color>
		<Color x:Key="Slider.Disabled.BackgroundColor">#FFF0F0F0</Color>
		<Color x:Key="Slider.Vacant.BackgroundColor">#FF999999</Color>

		<SolidColorBrush x:Key="Slider.Filled.Static.Background" Color="{StaticResource Slider.Filled.Static.BackgroundColor}"/>
		<SolidColorBrush x:Key="Slider.Filled.MouseOver.Background" Color="{StaticResource Slider.Filled.MouseOver.BackgroundColor}"/>
		<SolidColorBrush x:Key="Slider.Filled.Pressed.Background" Color="{StaticResource Slider.Filled.Pressed.BackgroundColor}"/>
		<SolidColorBrush x:Key="Slider.Disabled.Background" Color="{StaticResource Slider.Disabled.BackgroundColor}"/>
		<SolidColorBrush x:Key="Slider.Vacant.Background" Color="{StaticResource Slider.Vacant.BackgroundColor}"/>

		<Style x:Key="SliderButtonHorizontal" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="{TemplateBinding Background}">
							<Rectangle Width="{TemplateBinding Width}"
									   Height="5"
									   Margin="{TemplateBinding Padding}"
									   Fill="{TemplateBinding Foreground}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="SliderThumbHorizontal" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
							<Rectangle x:Name="grip"
									   Width="{TemplateBinding Width}"
									   Height="{TemplateBinding Height}"
									   SnapsToDevicePixels="True" UseLayoutRounding="True">
								<Rectangle.Fill>
									<SolidColorBrush Color="{StaticResource Slider.Filled.Static.BackgroundColor}"/>
								</Rectangle.Fill>
							</Rectangle>

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation	Storyboard.TargetName="grip"
															Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
															Duration="0:0:0.1"
															To="{StaticResource Slider.Filled.MouseOver.BackgroundColor}"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation	Storyboard.TargetName="grip"
															Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
															Duration="0:0:0.1"
															To="{StaticResource Slider.Filled.Pressed.BackgroundColor}"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="grip"
															Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
															Duration="0:0:0.1"
															To="{StaticResource Slider.Disabled.BackgroundColor}"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Slider}">
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True">
							<Grid>
								<Border x:Name="trackBackground"
										VerticalAlignment="Center"
										Height="5" Margin="5,0"
										Background="{StaticResource Slider.Vacant.Background}"/>

								<Track x:Name="PART_Track">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static Slider.DecreaseLarge}"
													  Foreground="{StaticResource Slider.Filled.Static.Background}"
													  Padding="5,0,0,0"
													  Style="{StaticResource SliderButtonHorizontal}">
										</RepeatButton>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static Slider.IncreaseLarge}"
													  Foreground="Transparent"
													  Padding="0,0,5,0"
													  Style="{StaticResource SliderButtonHorizontal}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb x:Name="thumb"
											   Width="11" Height="{DynamicResource ThumbHeight}"
											   Style="{StaticResource SliderThumbHorizontal}"/>
									</Track.Thumb>
								</Track>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="Foreground" TargetName="thumb" Value="{StaticResource Slider.Filled.MouseOver.Background}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Access Center Like Button -->
		<Style x:Key="AccessButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Grid x:Name="buttonBase">
								<Grid.Background>
									<SolidColorBrush Color="{StaticResource AccessButton.Normal.BackgroundColor}"/>
								</Grid.Background>
								<Border x:Name="buttonBorder"
										BorderThickness="2">
									<Border.BorderBrush>
										<SolidColorBrush Color="{StaticResource AccessButton.Normal.BorderColor}"/>
									</Border.BorderBrush>

									<ContentPresenter Content="{TemplateBinding Content}"/>
								</Border>
							</Grid>

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="buttonBorder"
															Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
															Duration="0"
															To="{StaticResource AccessButton.MouseOver.BorderColor}"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="buttonBase"
															Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
															Duration="0"
															To="{StaticResource AccessButton.Pressed.BackgroundColor}"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Unison -->
		<Color x:Key="Unison.Checked.BackgroundColor">#FFECECEC</Color>

		<SolidColorBrush x:Key="Unison.Checked.Background" Color="{StaticResource Unison.Checked.BackgroundColor}"/>

		<Style x:Key="UnisonButtonStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Grid>
							<Grid x:Name="buttonBase">
								<Grid.Background>
									<SolidColorBrush Color="{StaticResource AccessButton.Normal.BackgroundColor}"/>
								</Grid.Background>
								<Border x:Name="buttonBorder"
										BorderThickness="2">
									<Border.BorderBrush>
										<SolidColorBrush Color="{StaticResource AccessButton.Normal.BorderColor}"/>
									</Border.BorderBrush>

									<Grid Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
										  Margin="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  RenderOptions.EdgeMode="Aliased">
										<Path x:Name="horizontalLine"
											  Stretch="Uniform"
											  Data="M 0,0 1,0"
											  Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
										<Path x:Name="verticalLine"
											  Stretch="Uniform"
											  Data="M 0,0 0,1"
											  Stroke="{TemplateBinding Foreground}" StrokeThickness="1"
											  Opacity="1"/>
									</Grid>
								</Border>
							</Grid>

							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="buttonBorder"
															Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
															Duration="0"
															To="{StaticResource AccessButton.MouseOver.BorderColor}"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="buttonBase"
															Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
															Duration="0"
															To="{StaticResource AccessButton.Pressed.BackgroundColor}"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualState x:Name="Checked">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="verticalLine"
															 Storyboard.TargetProperty="(UIElement.Opacity)"
															 Duration="0"
															 To="0"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Grid Width="360">
		<!-- Placeholder -->
		<TextBlock Margin="6,4"
				   Foreground="{StaticResource App.Foreground}"
				   Text="{Binding Source={x:Static models:ProductInfo.Title}, Mode=OneTime}"
				   Visibility="{Binding IsMonitorsEmpty, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>

		<!-- Monitors-->
		<ListView ItemsSource="{Binding MonitorsView}"
				  SelectionMode="Single">
			<ListView.Template>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border BorderThickness="0">
						<ScrollViewer CanContentScroll="False"
									  HorizontalScrollBarVisibility="Disabled"
									  VerticalScrollBarVisibility="Auto">
							<VirtualizingStackPanel IsItemsHost="True"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</ListView.Template>
			<ListView.ItemTemplate>
				<DataTemplate>
					<Grid Margin="4,0,4,4">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<!-- Description -->
						<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
								   Margin="4,6" VerticalAlignment="Center"
								   Foreground="{StaticResource App.Foreground}"
								   FontSize="12"
								   TextWrapping="Wrap"
								   Text="{Binding Description, Mode=OneTime}"/>

						<!-- Brightness -->
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<Button Grid.Column="0"
									Width="80" Height="{DynamicResource ButtonHeight}" Margin="2,2,0,2"
									Style="{StaticResource AccessButtonStyle}">
								<TextBlock Margin="2" HorizontalAlignment="Left" VerticalAlignment="Bottom"
										   Foreground="{StaticResource App.Foreground}"
										   Text="{Binding Brightness, Mode=OneWay, StringFormat={}{0}%}"/>
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ei:CallMethodAction TargetObject="{Binding}"
															 MethodName="IncrementBrightness"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>

							<controls:QuickSlider Grid.Column="1"
												  Margin="10,0,6,0" VerticalAlignment="Center"
												  Style="{StaticResource SliderHorizontal}"
												  AutoToolTipPlacement="TopLeft"
												  Minimum="0" Maximum="100"
												  Value="{Binding BrightnessInteractive, Mode=TwoWay, Delay=50}"
												  IsUnison="{Binding ElementName=UnisonButton, Path=IsChecked, Mode=TwoWay}"/>

							<ToggleButton Grid.Column="2"
										  x:Name="UnisonButton"
										  Width="16" Height="{DynamicResource ButtonHeight}" Margin="0,2,2,2"
										  Style="{StaticResource UnisonButtonStyle}"
										  Foreground="{StaticResource App.Foreground}"
										  VerticalContentAlignment="Bottom"
										  IsChecked="{Binding RelativeSource={RelativeSource Self}, Path=Visibility, Mode=OneWay, Converter={StaticResource VisibilityToBooleanFilterConverterKey}, ConverterParameter=False}"
										  Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Settings.IsEnabledUnison, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>

							<Border Grid.ColumnSpan="3"
									BorderThickness="2"
									BorderBrush="{StaticResource Unison.Checked.Background}"
									IsHitTestVisible="False"
									Visibility="{Binding ElementName=UnisonButton, Path=IsChecked, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>
						</Grid>
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>
			<ListView.ItemContainerStyle>
				<Style TargetType="{x:Type ListViewItem}">
					<Setter Property="Margin" Value="0"/>
					<Setter Property="OverridesDefaultStyle" Value="True"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ContentControl}">
								<ContentPresenter/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListView.ItemContainerStyle>
		</ListView>
	</Grid>
</Window>